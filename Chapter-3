@ Write a Log Package

Write ahead log(WAL), transaction logs, commit logs - heart of storage engines, message queues,
version control, replication and consensus algorithms

Database devs use WAL for replication. Instead of writing logs to disk, they write over network
to its replicas and they eventually end up with same state. 

We write to active segment and archive old segments.
Each segment has a store and an index file. Store file has record data (we append records here)
Index file indexes each record in store file. Index files are small enough to store as memory-mapped files.

@ Build a Log

Record - the data stored in our log.
Store - the file we store records in.
Index - the file we store index entries in.
Segment - the abstraction that ties a store and an index together.
Log - the abstraction that ties all the segments together.

To allow fmt.Print output to console use -v
$ go test ./... -v

---------"When we start our service, the service needs to know the offset to set on the
next record appended to the log. The service learns the next record’s offset
by looking at the last entry of the index, a simple process of reading the last
12 bytes of the file. However, we mess up this process when we grow the files
so we can memory-map them. (The reason we resize them now is that, once
they’re memory-mapped, we can’t resize them, so it’s now or never.) We grow
the files by appending empty space at the end of them, so the last entry is no
longer at the end of the file—instead, there’s some unknown amount of space
between this entry and the file’s end. This space prevents the service from
restarting properly. That’s why we shut down the service by truncating the
index files to remove the empty space and put the last entry at the end of the
file once again. This graceful shutdown returns the service to a state where
it can restart properly and efficiently"------------

